// Developed for SCADA measurement page in state estimation front-end web
// Developed by: Chen Yuan, chen.yuan@geirina.net
// History:
// 05/30/2018 [Chen Yuan] This query is created and developed for SCADA measurement visualization for branch info in EMS state estimation front-end web


drop query branchpowerviolation

// ==================================================================================================================================
//		                          Main Function of the Code
// ==================================================================================================================================
create query branchpowerviolation (int brp_params)
for graph gsql_EMS {
	
    MaxAccum<double> @@PI = 3.1415926535898;
	ListAccum<edge> @@edgeList;

	
	
	T0 = {TopoND.*};
	
	
    T1 = SELECT s   
	     FROM T0:s-(topo_connect:e)->TopoND:t
		 where e.reverse == 1 //and s.island == 1 and t.island == 1
		 ACCUM
			e.edge_name = s.bus_name + "->" + t.bus_name,
			@@edgeList += e,
			case when (e.transformer_final_turns_ratio != 0) then
				e.device_type = "变压器"
			else
				e.device_type = "AC传输线"
			end;
	
	T0 = select s 
	   from T0:s -(topo_connect:e)->TopoND:t 
	   //where s.island ==1 and t.island == 1
	   accum
	    double tap_ratio = abs(e.transformer_final_turns_ratio/e.kcount),
		double tap_ratio_square = abs((e.transformer_final_turns_ratio/e.kcount)*(e.transformer_final_turns_ratio/e.kcount)),
	    case when (e.transformer_final_turns_ratio == 0) then
				e.P_TLPF = s.SE_Vm * t.SE_Vm * sin(s.SE_Va - t.SE_Va)* e.B + (s.SE_Vm*s.SE_Vm - s.SE_Vm*t.SE_Vm*cos(s.SE_Va - t.SE_Va)) * e.G,
				e.Q_TLPF = - s.SE_Vm * s.SE_Vm * (-e.B + 0.5*e.hB) - s.SE_Vm * t.SE_Vm * (e.G*sin(s.SE_Va - t.SE_Va) - (-e.B)*cos(s.SE_Va - t.SE_Va))
			when (e.transformer_final_turns_ratio > 0) then
				e.P_TLPF = s.SE_Vm * s.SE_Vm * (e.G/tap_ratio_square) - s.SE_Vm * t.SE_Vm * ((e.G/tap_ratio)*cos(s.SE_Va - t.SE_Va) + (-e.B/tap_ratio)*sin(s.SE_Va - t.SE_Va)),
				e.Q_TLPF = - s.SE_Vm * s.SE_Vm * (-e.B + 0.5*e.hB) / tap_ratio_square - s.SE_Vm * t.SE_Vm * ((e.G/tap_ratio)*sin(s.SE_Va - t.SE_Va) - (-e.B/tap_ratio)*cos(s.SE_Va - t.SE_Va))
			else
				e.P_TLPF = s.SE_Vm * s.SE_Vm * e.G - s.SE_Vm * t.SE_Vm * ((e.G/tap_ratio)*cos(s.SE_Va - t.SE_Va) + (-e.B/tap_ratio)*sin(s.SE_Va - t.SE_Va)),
				e.Q_TLPF = - s.SE_Vm * s.SE_Vm * (-e.B + 0.5*e.hB) - s.SE_Vm * t.SE_Vm * ((e.G/tap_ratio)*sin(s.SE_Va - t.SE_Va) - (-e.B/tap_ratio)*cos(s.SE_Va - t.SE_Va))
			end;
	
	IF (brp_params == 1) THEN
		T1 = SELECT s   
			 FROM T0:s-(topo_connect:e)->TopoND:t
			 WHERE e.P_TLPF > e.line_Q1 and e.reverse == 1
			  //where e.reverse == 0
			 ACCUM
				@@edgeList += e;
				
	ELSE IF  (brp_params == 2) THEN
		T1 = SELECT s   
			 FROM T0:s-(topo_connect:e)->TopoND:t
			 WHERE e.P_TLPF > e.line_Q2 and e.reverse == 1
			  //where e.reverse == 0
			 ACCUM
				@@edgeList += e;
	ELSE IF  (brp_params == 3) THEN
		T1 = SELECT s   
			 FROM T0:s-(topo_connect:e)->TopoND:t
			 WHERE e.P_TLPF > e.line_Q3 and e.reverse == 1
			  //where e.reverse == 0
			 ACCUM
				@@edgeList += e;
	END;
	
				

	
	//end;
	print @@edgeList;


	
		 
}

//install query -ui branchpowerviolation
