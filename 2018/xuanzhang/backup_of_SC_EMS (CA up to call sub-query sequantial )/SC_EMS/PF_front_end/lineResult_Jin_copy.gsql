drop query lineResult

// ==================================================================================================================================
//		                          Main Function of the Code
// ==================================================================================================================================
create query lineResult()
for graph gsql_EMS {
	
	TYPEDEF TUPLE < string edge_name, int edge_type, uint s_exId, uint t_exId, uint s_type, uint t_type, string tap_bus_name, string z_bus_name, double PF_P, double PF_Q, double PF_MVA> row;
	SumAccum<int> @@id = 0;
//	ListAccum<row> @@edgeList; 
	HeapAccum<row>(1000000, edge_name asc) @@edgeList;
	double P_TLPF;
	double Q_TLPF;
	MaxAccum<double> @@PI = 3.1415926535898;
	
	
	T0 = {TopoND.*};	
	
	
	T0 = SELECT s   
	FROM T0:s-(topo_connect:e)->TopoND:t
	where e.reverse == 1 //and s.island == 1 and t.island == 1
	ACCUM
	e.edge_name = s.bus_name + "->" + t.bus_name;
	
	T1 = SELECT s 
	  from T0: s -(topo_connect:e)->TopoND:t 
	  //where e.reverse == 1
	  accum 
	  double tap_ratio = abs(e.transformer_final_turns_ratio/e.kcount),
	  double tap_ratio_square = abs((e.transformer_final_turns_ratio/e.kcount)*(e.transformer_final_turns_ratio/e.kcount)),
			case when (e.transformer_final_turns_ratio == 0) then
				e.P_TLPF = s.PF_Vm * t.PF_Vm * sin((s.PF_Va - t.PF_Va)*@@PI/180)* e.B + (s.PF_Vm*s.PF_Vm - s.PF_Vm*t.PF_Vm*cos((s.PF_Va - t.PF_Va)*@@PI/180)) * e.G,
				e.Q_TLPF = - s.PF_Vm * s.PF_Vm * (-e.B + 0.5*e.hB) - s.PF_Vm * t.PF_Vm * (e.G*sin((s.PF_Va - t.PF_Va)*@@PI/180) - (-e.B)*cos((s.PF_Va - t.PF_Va)*@@PI/180))
			when (e.transformer_final_turns_ratio > 0) then
				e.P_TLPF = s.PF_Vm * s.PF_Vm * (e.G/tap_ratio_square) - s.PF_Vm * t.PF_Vm * ((e.G/tap_ratio)*cos((s.PF_Va - t.PF_Va)*@@PI/180) + (-e.B/tap_ratio)*sin((s.PF_Va - t.PF_Va)*@@PI/180)),
				e.Q_TLPF = - s.PF_Vm * s.PF_Vm * (-e.B + 0.5*e.hB) / tap_ratio_square - s.PF_Vm * t.PF_Vm * ((e.G/tap_ratio)*sin((s.PF_Va - t.PF_Va)*@@PI/180) - (-e.B/tap_ratio)*cos((s.PF_Va - t.PF_Va)*@@PI/180))
			else
				e.P_TLPF = s.PF_Vm * s.PF_Vm * e.G - s.PF_Vm * t.PF_Vm * ((e.G/tap_ratio)*cos((s.PF_Va - t.PF_Va)*@@PI/180) + (-e.B/tap_ratio)*sin((s.PF_Va - t.PF_Va)*@@PI/180)),
				e.Q_TLPF = - s.PF_Vm * s.PF_Vm * (-e.B + 0.5*e.hB) - s.PF_Vm * t.PF_Vm * ((e.G/tap_ratio)*sin((s.PF_Va - t.PF_Va)*@@PI/180) - (-e.B/tap_ratio)*cos((s.PF_Va - t.PF_Va)*@@PI/180))
			end;	
			
			
			
    T1 =SELECT s 
	  from T0: s -(topo_connect:e)->TopoND:t
	  where e.reverse == 1
	  accum 
	  	case when (sqrt(e.P_TLPF*e.P_TLPF + e.Q_TLPF*e.Q_TLPF) >= e.th and sqrt(e.P_TLPF*e.P_TLPF + e.Q_TLPF*e.Q_TLPF) < e.em) then
		e.CI = 1
		when (sqrt(e.P_TLPF*e.P_TLPF + e.Q_TLPF*e.Q_TLPF) >= e.em and sqrt(e.P_TLPF*e.P_TLPF + e.Q_TLPF*e.Q_TLPF) < e.sh) then
		e.CI = 2
		when (sqrt(e.P_TLPF*e.P_TLPF + e.Q_TLPF*e.Q_TLPF) >= e.sh) then
		e.CI = 3
		else e.CI = 0
		end;
    //print "line_id", "tap_bus", "z_bus", "R", "X", "B", "P", "Q", "I", "Line1_MVA", "Line2_MVA", "Line3_MVA";	

    T1 = SELECT s
	      FROM T0:s-(topo_connect:e)->TopoND:t
		  where e.flag == 0 and s.island == 1 and t.island == 1 and e.reverse == 1
		  ACCUM 
		      log(true, s.exId, t.exId),
            	      int minValue = e.kcount - 1,
            	      IF (minValue < 0) THEN
                          minValue = 0
            	      END,
	    	      FOREACH i in range[0, minValue] DO
	    	  double PF_Q = e.Q_TLPF/e.kcount,
	    	  double PF_P = e.P_TLPF/e.kcount,
	    	  double PF_MVA = sqrt(PF_Q*PF_Q + PF_P*PF_P),	
		      IF (e.CI == 1) THEN
                  @@edgeList+= row(e.edge_name, e.flag, s.exId, t.exId, s.busType, t.busType, s.bus_name, t.bus_name, PF_P, PF_Q, PF_MVA)
              ELSE IF (e.CI == 2) THEN
                  @@edgeList+= row(e.edge_name, e.flag, s.exId, t.exId, s.busType, t.busType, s.bus_name, t.bus_name, PF_P, PF_Q, PF_MVA)
			  ELSE IF (e.CI == 3) THEN
                  @@edgeList+= row(e.edge_name, e.flag, s.exId, t.exId, s.busType, t.busType, s.bus_name, t.bus_name, PF_P, PF_Q, PF_MVA)
			  ELSE 
			      @@edgeList+= row(e.edge_name, e.flag, s.exId, t.exId, s.busType, t.busType, s.bus_name, t.bus_name, PF_P, PF_Q, PF_MVA)
                	  END
		      END;
			
//	    log(true,@@edgeList);
	
	foreach x in @@edgeList do
		@@id += 1;
		print x.edge_name, x.s_exId, x.t_exId, x.PF_P, x.PF_Q, x.PF_MVA, x.tap_bus_name, x.z_bus_name;
	
	end;


}

install query lineResult
